name: Create resources using Terraform

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  terraform-checks:
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Check out Git Repository
        uses: actions/checkout@v3

      # Cache TFLint plugins directory
      - name: Cache plugin dir
        uses: actions/cache@v2
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      # Setup TFLint
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v2
        with:
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}

      # Print TFLint version
      - name: Show TFLint version
        run: tflint --version

      # Install TFLint plugins
      - name: Init TFLint
        run: tflint --init
#
      # # Run TFLint
      # - name: Run TFLint
      #   run: tflint -f compact --recursive --force
      - name: run tflint
        id: tflint
        run: |
          tflint -f compact --recursive --force 2>&1 | tee tflint-out.txt
          if [ ! -s tflint-out.txt ]; then
            echo "TFLint run has no findings" >> tflint-out.txt
          else
            sed -i '1i*************' tflint-out.txt
            sed -i '1iTFLint Report' tflint-out.txt
          fi
      - name: TFLint Output in PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          header: tflint-outputs
          recreate: true
          path: tflint-out.txt

      # Run Tfsec
      - name: Run TFSec and save output
        id: tfsec
        run: |
          aquasecurity/tfsec-action@v1.0.0 > tfsec.txt 2>&1 || true
        continue-on-error: true
     


      # - name: Save TFSec Output
      #   run: echo "${{ steps.tfsec.outputs.tfsec_results }}" > tfsec.txt

      # Filter failure cases from TFSec output
      - name: Filter Failure Cases from TFSec Output
        run: grep -E "CRITICAL|HIGH" tfsec.txt > tfsec-failures.txt || true

      # Comment on PR with TFSec failure cases
      - name: TFSec Output in PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          header: tfsec-outputs
          recreate: true
          path: tfsec.txt

        
      - name: Format Terraform files
        run: terraform fmt -recursive
        
      # Test with Checkov
      - name: Test with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        continue-on-error: true

  
