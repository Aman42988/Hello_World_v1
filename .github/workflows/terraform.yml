name: Create resources using Terraform

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  terraform-checks:
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Check out Git Repository
        uses: actions/checkout@v3

      # Cache TFLint plugins directory
      - name: Cache plugin dir
        uses: actions/cache@v2
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      # Setup TFLint
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v2
        with:
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}

      # Print TFLint version
      - name: Show TFLint version
        run: tflint --version

      # Install TFLint plugins
      - name: Init TFLint
        run: tflint --init
#
      # # Run TFLint
      # - name: Run TFLint
      #   run: tflint -f compact --recursive --force
      - name: run tflint
        id: tflint
        run: |
          tflint -f compact --recursive --force 2>&1 | tee tflint-out.txt
          if [ ! -s tflint-out.txt ]; then
            echo "TFLint run has no findings" >> tflint-out.txt
          else
            sed -i '1i*************' tflint-out.txt
            sed -i '1iTFLint Report' tflint-out.txt
          fi
      - name: TFLint Output in PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          header: tflint-outputs
          recreate: true
          path: tflint-out.txt

      # Run Tfsec
      - name: Run Tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

        
      - name: Format Terraform files
        run: terraform fmt -recursive
        
      # Test with Checkov
      # - name: Test with Checkov
      #   id: checkov
      #   uses: bridgecrewio/checkov-action@master
      #   continue-on-error: true
      - name: Test with Checkov (Action)
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./Terraform_code

      # Save Checkov output to a file
      # - name: Save Checkov Output
      #   if: always()
      #   run: echo "${{ steps.checkov.outputs.checkov_command }}" > checkov.txt

      # # Show Checkov output in the workflow log
      # - name: Display Checkov Output
      #   if: always()
      #   run: cat checkov.txt
        
      # - name: Checkov Output in PR
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
      #     header: checkov-outputs
      #     recreate: true
      #     message: |
      #       ```
      #       ${{  steps.checkov.outputs.checkov_command }}
      #       ```
